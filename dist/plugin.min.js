"use strict";function parallax(e,t){window.requestAnimationFrame(function(){var r=getElementOffset(t),a=r+t.offsetHeight;window.pageYOffset>r&&window.pageYOffset<a?e.style.transform="translate3d(0, "+.2*(window.pageYOffset-r)+"px, 0)":e.style.transform="translate3d(0, 0px, 0)"})}function getElementOffset(e){var t=0,r=e;do t+=r.offsetTop||0,r=r.offsetParent;while(r);return t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var parallaxImgSection=document.querySelectorAll(".danzerpress-section .danzerpress-parallax"),parallaxImgTitle=document.querySelector(".danzerpress-title-area .danzerpress-parallax");parallaxImgSection.forEach(function(e){document.addEventListener("scroll",function(){parallax(e,e.closest(".danzerpress-section"))})}),parallaxImgTitle&&document.addEventListener("scroll",function(){parallax(parallaxImgTitle,parallaxImgTitle.closest(".danzerpress-title-area"))});var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var a=t[r];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,r,a){return r&&e(t.prototype,r),a&&e(t,a),t}}(),Slider=function(){function e(){_classCallCheck(this,e),this.height=0,this.sliderNumber=3,this.sliderWrap=document.querySelector(".danzerpress-slider-wrap"),this.slider=document.querySelector(".danzerpress-slider"),this.createPagination(),this.handleSlider()}return _createClass(e,[{key:"createPagination",value:function(){var e=this,t='\n            <div class="danzerpress-slider-pagination">\n                <ul>\n                </ul>\n            </div>\n        ';console.log(this.slider.children.length),console.log(this.sliderNumber);for(var r=(new DOMParser).parseFromString(t,"text/html").body.firstChild,a=0;a<this.slider.children.length;a++)if(a>this.sliderNumber){var i=document.createElement("li");r.children[0].append(i),i.classList.add("active"),i.addEventListener("click",function(t){var r=document.querySelectorAll(".danzerpress-slider div.active"),a=document.querySelectorAll(".danzerpress-slider-pagination ul li");e.setActiveStuff(r),e.setActiveStuff(a),t.target.classList.add("active")})}this.sliderWrap.append(r)}},{key:"handleSlider",value:function(){for(var e=0;e<this.slider.children.length;e++){var t=this.slider.children[e],r=t.offsetHeight;r>this.height&&(this.height=r),t.style.position="absolute",t.classList.add("slider-child"),t.classList.add("active")}this.slider.style.height=this.height+"px"}},{key:"setActiveStuff",value:function(e){e&&e.forEach(function(e){e.classList.remove("active")})}}]),e}();new Slider;
//# sourceMappingURL=data:application/json;base64,
